set -ga terminal-overrides ",xterm-256color*:Tc"

## -- general --
setw -g xterm-keys on
set -sg escape-time 0                    # faster command sequences
set -sg repeat-time 150                  # increase repeat timeout
set -s focus-events on

set-option -g history-limit 10000
set -g history-limit 10000                 # boost history

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf reloaded' # reload configuration

## -- display --
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

# window navigation
# unbind n
# unbind p
# bind -r C-h previous-window # select previous window
# bind -r C-l next-window     # select next window
# bind Tab last-window        # move to last active window

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/todo.md"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
# bind-key -r M run-shell "~/.local/bin/tmux-windowizer /Users/andrey/src/mealpal"
# bind-key -r K run-shell "~/.local/bin/tmux-windowizer ~/src/mealpal/subscriber/frontend/new_kitchen"
# bind-key -r D run-shell "~/.local/bin/tmux-windowizer ~/.dotfiles"

# --display --
set -g status-style 'bg=#333333 fg=#5eacd3'
set -g status-right '%r'
set -g set-titles on          # set terminal title
set -g mouse on
set -g set-titles-string "[#W] #T"
setw -g automatic-rename on   # rename window to reflect current program

# -- copy mode -----------------------------------------------------------------
set -s set-clipboard external
setw -g mode-keys vi
bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# copy to macOS clipboard
# if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
# if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
# if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
# if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
# if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
# if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'primary'

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/personal/dev/todo.md"

# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
